buildscript {
    repositories {
        // The plugin is currently only available via the Jenkins
        // Maven repository, but has dependencies in Maven Central.
        mavenCentral()
        maven {
            url 'https://repo.jenkins-ci.org/releases/'
        }
    }
    dependencies {
        classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.14.1'
    }
}

apply plugin: 'groovy'
apply plugin: 'org.jenkins-ci.jpi'

repositories {
  mavenCentral()
  maven {
    url "https://repo.jenkins-ci.org/releases/"
  }
}

group = 'org.jenkins-ci.plugins'
version = '0.1.0-SNAPSHOT'
description = 'A Very Simple Git Plugin'

jenkinsPlugin {
    // version of Jenkins core this plugin depends on, must be 1.420 or later
    coreVersion = '1.609.1'

    // ID of the plugin, defaults to the project name without trailing '-plugin'
    shortName = 'simple-scm-plugin'

    // human-readable name of plugin                                               
    displayName = 'Git Simple Plugin'

    // URL for plugin on Jenkins wiki or elsewhere
    url = 'http://wiki.jenkins-ci.org/display/JENKINS/Git+Simple+Plugin'

    // plugin URL on GitHub, optional
    gitHubUrl = 'https://github.com/martinda/simple-scm-plugin'

    // use the plugin class loader before the core class loader, defaults to false
    pluginFirstClassLoader = true

    // optional list of package prefixes that your plugin doesn't want to see from core 
    maskClasses = 'groovy.grape org.apache.commons.codec'

    // optional version number from which this plugin release is configuration-compatible
    compatibleSinceVersion = '1.1.0'

    // set the directory from which the development server will run, defaults to 'work'
    workDir = file('/tmp/jenkins')

    // URL used to deploy the plugin, defaults to the value shown
    repoUrl = 'http://maven.jenkins-ci.org:8081/content/repositories/releases'

    // URL used to deploy snapshots of the plugin, defaults to the value shown
    snapshotRepoUrl = 'http://maven.jenkins-ci.org:8081/content/repositories/snapshots'

    // enable injection of additional tests for checking the syntax of Jelly and other things
    disabledTestInjection = false

    // the output directory for the localizer task relative to the project root, defaults to the value shown
    localizerOutputDir = "${project.buildDir}/generated-src/localizer"

    // disable configuration of Maven Central, the local Maven cache and the Jenkins Maven repository, defaults to true
    configureRepositories = false

    // skip configuration of publications and repositories for the Maven Publishing plugin, defaults to true
    configurePublishing = false

    // plugin file extension, either 'jpi' or 'hpi', defaults to 'hpi'
    fileExtension = 'hpi'

    // the developers section is optional, and corresponds to the POM developers section
    developers {
        developer {
            id 'martinda'
            name '''Martin d'Anjou'''
            email 'martin.danjou14@gmail.com'
        }
    }                           
}